//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `home.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Home;

public class Oven extends Device
{
    public Oven()
    {
        super();
        this.ovenMode = OvenMode.FAN;
    }

    public Oven(String name, DeviceType type, boolean isOn, OvenMode[] possibleOvenMods, OvenMode ovenMode, short temperature, boolean isOpen)
    {
        super(name, type, isOn);
        this.possibleOvenMods = possibleOvenMods;
        this.ovenMode = ovenMode;
        this.temperature = temperature;
        this.isOpen = isOpen;
    }

    public OvenMode[] possibleOvenMods;

    public OvenMode ovenMode;

    public short temperature;

    public boolean isOpen;

    public Oven clone()
    {
        return (Oven)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Home::Oven";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -7137611082327863086L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, false);
        possibleOvenModsHelper.write(ostr_, possibleOvenMods);
        OvenMode.ice_write(ostr_, ovenMode);
        ostr_.writeShort(temperature);
        ostr_.writeBool(isOpen);
        ostr_.endSlice();
        super._iceWriteImpl(ostr_);
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        possibleOvenMods = possibleOvenModsHelper.read(istr_);
        ovenMode = OvenMode.ice_read(istr_);
        temperature = istr_.readShort();
        isOpen = istr_.readBool();
        istr_.endSlice();
        super._iceReadImpl(istr_);
    }
}
